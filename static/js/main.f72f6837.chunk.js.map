{"version":3,"sources":["App.jsx","index.jsx"],"names":["ALPHABETICALLY","LENGTH","REVERSE","goodsFromServer","App","useState","goods","setGoods","select","setSelect","sortMethod","howToSort","sort","a","b","localeCompare","length","reverse","Reset","type","className","undefined","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAAiB,iBACjBC,EAAS,SACTC,EAAU,UAGHC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAa,SAACC,GAClB,OAAQA,GACN,KAAKX,EACHO,EAAS,YAAID,GAAOM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OACnDL,EAAUT,GACV,MACF,KAAKC,EACHM,EAAS,YAAID,GAAOM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAChDP,EAAUR,GACV,MACF,KAAKC,EACHK,EAAS,YAAID,GAAOW,WACpBR,EAAUP,GACV,MACF,QACEK,EAASJ,GACTM,EAAU,MAIVS,EAAQ,WACZ,MAAe,KAAXV,EAEA,wBACEW,KAAK,SACLC,UAAS,2BA5CL,UA4C2BZ,EAAmB,gBAAaa,GAC/DC,QAAS,kBAAMZ,KAHjB,mBAUG,MAGT,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAS,yBAAoBZ,IAAWR,EAAiB,gBAAaqB,GACtEC,QAAS,kBAAMZ,EAAWV,IAH5B,iCAQA,wBACEmB,KAAK,SACLC,UAAS,4BAAuBZ,IAAWP,EAAS,gBAAaoB,GACjEC,QAAS,kBAAMZ,EAAWT,IAH5B,4BAQA,wBACEkB,KAAK,SACLC,UAAS,4BAAuBZ,IAAWN,EAAU,gBAAamB,GAClEC,QAAS,kBAAMZ,EAAWR,IAH5B,qBAQA,cAACgB,EAAD,OAGF,6BAEIZ,EAAMiB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3FpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f72f6837.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst ALPHABETICALLY = 'alphabetically';\nconst LENGTH = 'length';\nconst REVERSE = 'reverse';\nconst RESET = 'reset';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [select, setSelect] = useState('');\n\n  const sortMethod = (howToSort) => {\n    switch (howToSort) {\n      case ALPHABETICALLY:\n        setGoods([...goods].sort((a, b) => a.localeCompare(b)));\n        setSelect(ALPHABETICALLY);\n        break;\n      case LENGTH:\n        setGoods([...goods].sort((a, b) => a.length - b.length));\n        setSelect(LENGTH);\n        break;\n      case REVERSE:\n        setGoods([...goods].reverse());\n        setSelect(REVERSE);\n        break;\n      default:\n        setGoods(goodsFromServer);\n        setSelect('');\n    }\n  };\n\n  const Reset = () => {\n    if (select !== '') {\n      return (\n        <button\n          type=\"button\"\n          className={`button is-danger ${select !== RESET ? 'is-light' : undefined}`}\n          onClick={() => sortMethod()}\n        >\n          Reset\n        </button>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${select !== ALPHABETICALLY ? 'is-light' : undefined}`}\n          onClick={() => sortMethod(ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${select !== LENGTH ? 'is-light' : undefined}`}\n          onClick={() => sortMethod(LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${select !== REVERSE ? 'is-light' : undefined}`}\n          onClick={() => sortMethod(REVERSE)}\n        >\n          Reverse\n        </button>\n\n        <Reset />\n      </div>\n\n      <ul>\n        {\n          goods.map(item => <li data-cy=\"Good\" key={item}>{item}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}