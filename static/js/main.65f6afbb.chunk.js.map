{"version":3,"sources":["App.jsx","index.jsx"],"names":["ALPHABETICALLY","LENGTH","goodsFromServer","App","useState","select","setSelect","isReversed","setReversed","Reset","type","className","cn","onClick","rever","res","sort","a","b","localeCompare","length","reverse","sortMethod","map","item","ReactDOM","render","document","getElementById"],"mappings":"0OAKMA,EAAiB,iBACjBC,EAAS,SAGFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBMC,EAAQ,WACZ,MAAe,KAAXJ,EAEA,wBACEK,KAAK,SACLC,UAAWC,IAAG,mBAAoB,CAAE,WA1ChC,KA0C4CP,IAChDQ,QAAS,WACPP,EA5CE,IA6CFE,GAAY,IALhB,mBAaG,MAGT,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IAAG,iBACZ,CAAE,WAAYP,IAAWL,IAC3Ba,QAAS,WACPP,EAAUN,IALd,iCAWA,wBACEU,KAAK,SACLC,UAAWC,IAAG,oBAAqB,CAAE,WAAYP,IAAWJ,IAC5DY,QAAS,WACPP,EAAUL,IAJd,4BAUA,wBACES,KAAK,SACLC,UAAWC,IAAG,oBACZ,CAAE,YAAaL,IACjBM,QAAS,WACPL,GAAaD,IALjB,qBAWA,cAACE,EAAD,OAGF,6BA3Ee,SAACK,GAClB,IAAIC,EAAG,UAAOb,GAcd,OAZIG,IAAWL,IACbe,EAAM,UAAIb,GAAiBc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAGxDb,IAAWJ,IACbc,EAAM,UAAIb,GAAiBc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAGrDb,IACFQ,EAAMA,EAAIM,WAGLN,EA8DDO,GAAaC,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpG3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65f6afbb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst ALPHABETICALLY = 'alphabetically';\nconst LENGTH = 'length';\nconst RESET = '';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [select, setSelect] = useState('');\n  const [isReversed, setReversed] = useState();\n\n  const sortMethod = (rever) => {\n    let res = [...goodsFromServer];\n\n    if (select === ALPHABETICALLY) {\n      res = [...goodsFromServer].sort((a, b) => a.localeCompare(b));\n    }\n\n    if (select === LENGTH) {\n      res = [...goodsFromServer].sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      res = res.reverse();\n    }\n\n    return res;\n  };\n\n  const Reset = () => {\n    if (select !== '') {\n      return (\n        <button\n          type=\"button\"\n          className={cn('button is-danger', { 'is-light': select !== RESET })}\n          onClick={() => {\n            setSelect(RESET);\n            setReversed(false);\n          }}\n        >\n          Reset\n        </button>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': select !== ALPHABETICALLY })}\n          onClick={() => {\n            setSelect(ALPHABETICALLY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', { 'is-light': select !== LENGTH })}\n          onClick={() => {\n            setSelect(LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => {\n            setReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        <Reset />\n      </div>\n\n      <ul>\n        {\n          sortMethod().map(item => <li data-cy=\"Good\" key={item}>{item}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}